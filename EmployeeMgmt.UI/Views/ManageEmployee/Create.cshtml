@model EmployeeMgmt.ViewModel.EmployeeViewModel

@{
    ViewBag.Title = "Create";
}

<div class="row">
    <div class="panel panel-primary">
        <div class="panel-heading"><i class="glyphicon glyphicon-plus"></i>Add New Employee</div>
        <div class="panel panel-body">
            <div class="col-md-14 col-lg-14 col-sm-14">

                @using (Html.BeginForm("Create", "ManageEmployee", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.DateofBirth, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.DateofBirth, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownList("Gender", ViewData["genderList"] as List<SelectListItem>, "Select Gender", new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    <img src="@Url.Content(Model.ImageUrl)" style="margin:10px" height="200" width="200" id="imagePreview" tabindex="26" />
                                    <input type="file" id="ImageUpload" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
                                </div>
                            </div>


                            <div class="form-group col-md-11 ">
                                <div class="pull-right">
                                    <input type="submit" value="Create" class="btn btn-primary" />
                                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
                                </div>

                            </div>
                        </div>
                    </div>
                }



            </div>
        </div>
    </div>
</div>
